{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { oneOf, shape, string } from 'prop-types';\nimport { lightSnowflakes, mediumSnowflakes } from \"../config/snowflakeStrategies\";\nimport Snowflake from \"./Snowflake\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar windowHeight = Dimensions.get('window').height + Dimensions.get('window').height * .1;\nvar Snow = function (_Component) {\n  _inherits(Snow, _Component);\n  var _super = _createSuper(Snow);\n  function Snow() {\n    _classCallCheck(this, Snow);\n    return _super.apply(this, arguments);\n  }\n  _createClass(Snow, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n        snowfall = _this$props.snowfall,\n        snowflakesStyle = _this$props.snowflakesStyle;\n      var snowflakes = snowfall === 'medium' ? mediumSnowflakes : lightSnowflakes;\n      return _jsx(View, {\n        style: styles.view,\n        pointerEvents: \"none\",\n        children: snowflakes.map(function (snowflake, i) {\n          var glyph = snowflake.glyph,\n            size = snowflake.size,\n            offset = snowflake.offset,\n            fallDelay = snowflake.fallDelay,\n            shakeDelay = snowflake.shakeDelay;\n          return _jsx(Snowflake, {\n            glyph: glyph,\n            size: size,\n            offset: offset,\n            fallDelay: fallDelay,\n            shakeDelay: shakeDelay,\n            style: snowflakesStyle\n          }, `snowflake-${i}`);\n        })\n      });\n    }\n  }]);\n  return Snow;\n}(Component);\nexport { Snow as default };\nSnow.propTypes = {\n  snowfall: oneOf(['light', 'medium']),\n  snowflakesStyle: shape({\n    color: string\n  })\n};\nSnow.defaultProps = {\n  snowfall: 'light'\n};\nvar styles = StyleSheet.create({\n  view: {\n    flexDirection: 'row',\n    zIndex: 9999,\n    elevation: 9999,\n    position: 'absolute',\n    top: 0,\n    left: -30,\n    width: Dimensions.get('window').width + 30,\n    height: windowHeight,\n    backgroundColor: 'transparent'\n  }\n});","map":{"version":3,"names":["React","Component","StyleSheet","View","Dimensions","oneOf","shape","string","lightSnowflakes","mediumSnowflakes","Snowflake","jsx","_jsx","windowHeight","get","height","Snow","_Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","render","_this$props","props","snowfall","snowflakesStyle","snowflakes","style","styles","view","pointerEvents","children","map","snowflake","i","glyph","size","offset","fallDelay","shakeDelay","default","propTypes","color","defaultProps","create","flexDirection","zIndex","elevation","position","top","left","width","backgroundColor"],"sources":["/Users/estradab/Projects/Developments/QuickWebsite/node_modules/react-native-snow/src/Snow.js"],"sourcesContent":["import React, { Component } from 'react';\nimport {\n  StyleSheet,\n  View,\n  Dimensions,\n} from 'react-native';\nimport { oneOf, shape, string } from 'prop-types';\nimport { lightSnowflakes, mediumSnowflakes } from '../config/snowflakeStrategies';\nimport Snowflake from './Snowflake';\n\nconst windowHeight = Dimensions.get('window').height + (Dimensions.get('window').height * .1);\n\nexport default class Snow extends Component {\n  render() {\n    const { snowfall, snowflakesStyle } = this.props;\n    const snowflakes = snowfall === 'medium' ? mediumSnowflakes : lightSnowflakes;\n    return (\n      <View style={styles.view} pointerEvents=\"none\">\n        {\n          snowflakes.map((snowflake, i) => {\n            const { glyph, size, offset, fallDelay, shakeDelay } = snowflake;\n            return (\n              <Snowflake\n                key={`snowflake-${i}`}\n                glyph={glyph}\n                size={size}\n                offset={offset}\n                fallDelay={fallDelay}\n                shakeDelay={shakeDelay}\n                style={snowflakesStyle}\n              />\n            );\n          })\n        }\n      </View>\n    );\n  }\n}\n\nSnow.propTypes = {\n  snowfall: oneOf(['light', 'medium']),\n  snowflakesStyle: shape({\n    color: string,\n  }),\n};\n\nSnow.defaultProps = {\n  snowfall: 'light',\n};\n\nconst styles = StyleSheet.create({\n  view: {\n    flexDirection: 'row',\n    zIndex: 9999,\n    elevation: 9999,\n    position: 'absolute',\n    top: 0,\n    left: -30,\n    width: Dimensions.get('window').width + 30,\n    height: windowHeight,\n    backgroundColor: 'transparent'\n  }\n});\n"],"mappings":";;;;;;;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAMzC,SAASC,KAAK,EAAEC,KAAK,EAAEC,MAAM,QAAQ,YAAY;AACjD,SAASC,eAAe,EAAEC,gBAAgB;AAC1C,OAAOC,SAAS;AAAoB,SAAAC,GAAA,IAAAC,IAAA;AAEpC,IAAMC,YAAY,GAAGT,UAAU,CAACU,GAAG,CAAC,QAAQ,CAAC,CAACC,MAAM,GAAIX,UAAU,CAACU,GAAG,CAAC,QAAQ,CAAC,CAACC,MAAM,GAAG,EAAG;AAAC,IAEzEC,IAAI,aAAAC,UAAA;EAAAC,SAAA,CAAAF,IAAA,EAAAC,UAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,IAAA;EAAA,SAAAA,KAAA;IAAAK,eAAA,OAAAL,IAAA;IAAA,OAAAG,MAAA,CAAAG,KAAA,OAAAC,SAAA;EAAA;EAAAC,YAAA,CAAAR,IAAA;IAAAS,GAAA;IAAAC,KAAA,EACvB,SAAAC,OAAA,EAAS;MACP,IAAAC,WAAA,GAAsC,IAAI,CAACC,KAAK;QAAxCC,QAAQ,GAAAF,WAAA,CAARE,QAAQ;QAAEC,eAAe,GAAAH,WAAA,CAAfG,eAAe;MACjC,IAAMC,UAAU,GAAGF,QAAQ,KAAK,QAAQ,GAAGrB,gBAAgB,GAAGD,eAAe;MAC7E,OACEI,IAAA,CAACT,IAAI;QAAC8B,KAAK,EAAEC,MAAM,CAACC,IAAK;QAACC,aAAa,EAAC,MAAM;QAAAC,QAAA,EAE1CL,UAAU,CAACM,GAAG,CAAC,UAACC,SAAS,EAAEC,CAAC,EAAK;UAC/B,IAAQC,KAAK,GAA0CF,SAAS,CAAxDE,KAAK;YAAEC,IAAI,GAAoCH,SAAS,CAAjDG,IAAI;YAAEC,MAAM,GAA4BJ,SAAS,CAA3CI,MAAM;YAAEC,SAAS,GAAiBL,SAAS,CAAnCK,SAAS;YAAEC,UAAU,GAAKN,SAAS,CAAxBM,UAAU;UAClD,OACEjC,IAAA,CAACF,SAAS;YAER+B,KAAK,EAAEA,KAAM;YACbC,IAAI,EAAEA,IAAK;YACXC,MAAM,EAAEA,MAAO;YACfC,SAAS,EAAEA,SAAU;YACrBC,UAAU,EAAEA,UAAW;YACvBZ,KAAK,EAAEF;UAAgB,GANjB,aAAYS,CAAE,EAOrB,CAAC;QAEN,CAAC;MAAC,CAEA,CAAC;IAEX;EAAC;EAAA,OAAAxB,IAAA;AAAA,EAxB+Bf,SAAS;AAAA,SAAtBe,IAAI,IAAA8B,OAAA;AA2BzB9B,IAAI,CAAC+B,SAAS,GAAG;EACfjB,QAAQ,EAAEzB,KAAK,CAAC,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;EACpC0B,eAAe,EAAEzB,KAAK,CAAC;IACrB0C,KAAK,EAAEzC;EACT,CAAC;AACH,CAAC;AAEDS,IAAI,CAACiC,YAAY,GAAG;EAClBnB,QAAQ,EAAE;AACZ,CAAC;AAED,IAAMI,MAAM,GAAGhC,UAAU,CAACgD,MAAM,CAAC;EAC/Bf,IAAI,EAAE;IACJgB,aAAa,EAAE,KAAK;IACpBC,MAAM,EAAE,IAAI;IACZC,SAAS,EAAE,IAAI;IACfC,QAAQ,EAAE,UAAU;IACpBC,GAAG,EAAE,CAAC;IACNC,IAAI,EAAE,CAAC,EAAE;IACTC,KAAK,EAAErD,UAAU,CAACU,GAAG,CAAC,QAAQ,CAAC,CAAC2C,KAAK,GAAG,EAAE;IAC1C1C,MAAM,EAAEF,YAAY;IACpB6C,eAAe,EAAE;EACnB;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}